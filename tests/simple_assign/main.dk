# a = 3
# b = 4
# c = a + b
# d = a / b
# # e = (d * c) - (a * b) / (d + c)
#
# # Test simple literal array creation
# x = [ 1 ]
# x[0] = 2
#
# # Test complex array, with slice interaction
# y = [ 1, 2.3, "foo" ]
# y[0:2] = -1.415
#
# # Assign from array slice
# w1 = y[2]
# w2 = y[:]
# w2 = y[1:3]
# w = [ item for item in my_list ]

# setting a property via "dot notation"
# zoo.animals[i].has_fur = true

# Creating a dict literal
# u = { "foo": 3, "bar": "cat" }
# u2 = { **item for item in some_dict }


# Creating set literals
# v = { "foo", "bar", 3, "baz" }
# v2 = { z for item in my_list for z in item }

# Setting values in z from literals
# z["foo"] = "dog"
# z["bar"] = 1.234

# def my_func(int a = 3, foo.bar.MyClass<T> b, c=none, *my_args, **my_kwargs):
#     pass

if false:
    x = 3
elif y <= z and q > r:
    x = 4
else:
    x = 5
